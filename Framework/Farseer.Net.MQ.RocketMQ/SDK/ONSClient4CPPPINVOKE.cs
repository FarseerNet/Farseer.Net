//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.10
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

using System;
using System.IO;
using System.Runtime.InteropServices;

namespace FS.MQ.RocketMQ.SDK
{
    internal class ONSClient4CPPPINVOKE
    {
        protected static SWIGExceptionHelper swigExceptionHelper = new SWIGExceptionHelper();

        protected static SWIGStringHelper swigStringHelper = new SWIGStringHelper();


        static ONSClient4CPPPINVOKE()
        {
        }


        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_new_SystemPropKey")]
        public static extern IntPtr new_SystemPropKey();

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_delete_SystemPropKey")]
        public static extern void delete_SystemPropKey(HandleRef jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_SystemPropKey_TAG_set")]
        public static extern void SystemPropKey_TAG_set(string jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_SystemPropKey_TAG_get")]
        public static extern string SystemPropKey_TAG_get();

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_SystemPropKey_KEY_set")]
        public static extern void SystemPropKey_KEY_set(string jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_SystemPropKey_KEY_get")]
        public static extern string SystemPropKey_KEY_get();

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_SystemPropKey_MSGID_set")]
        public static extern void SystemPropKey_MSGID_set(string jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_SystemPropKey_MSGID_get")]
        public static extern string SystemPropKey_MSGID_get();

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_SystemPropKey_RECONSUMETIMES_set")]
        public static extern void SystemPropKey_RECONSUMETIMES_set(string jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_SystemPropKey_RECONSUMETIMES_get")]
        public static extern string SystemPropKey_RECONSUMETIMES_get();

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_SystemPropKey_STARTDELIVERTIME_set")]
        public static extern void SystemPropKey_STARTDELIVERTIME_set(string jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_SystemPropKey_STARTDELIVERTIME_get")]
        public static extern string SystemPropKey_STARTDELIVERTIME_get();

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_new_Message__SWIG_0")]
        public static extern IntPtr new_Message__SWIG_0();

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_new_Message__SWIG_1")]
        public static extern IntPtr new_Message__SWIG_1(string jarg1, string jarg2, string jarg3);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_new_Message__SWIG_3")]
        public static extern IntPtr new_Message__SWIG_3(string jarg1, uint jarg2, string jarg3, uint jarg4,
            string jarg5, uint jarg6);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_new_Message__SWIG_4")]
        public static extern IntPtr new_Message__SWIG_4(string jarg1, string jarg2, string jarg3, string jarg4);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_delete_Message")]
        public static extern void delete_Message(HandleRef jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_new_Message__SWIG_5")]
        public static extern IntPtr new_Message__SWIG_5(HandleRef jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_Message_putUserProperties")]
        public static extern void Message_putUserProperties(HandleRef jarg1, string jarg2, string jarg3);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_Message_getUserProperties__SWIG_0")]
        public static extern string Message_getUserProperties__SWIG_0(HandleRef jarg1, string jarg2);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_Message_setUserProperties")]
        public static extern void Message_setUserProperties(HandleRef jarg1, HandleRef jarg2);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_Message_getUserProperties__SWIG_1")]
        public static extern IntPtr Message_getUserProperties__SWIG_1(HandleRef jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_Message_putSystemProperties")]
        public static extern void Message_putSystemProperties(HandleRef jarg1, string jarg2, string jarg3);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_Message_getSystemProperties__SWIG_0")]
        public static extern string Message_getSystemProperties__SWIG_0(HandleRef jarg1, string jarg2);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_Message_setSystemProperties")]
        public static extern void Message_setSystemProperties(HandleRef jarg1, HandleRef jarg2);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_Message_getSystemProperties__SWIG_1")]
        public static extern IntPtr Message_getSystemProperties__SWIG_1(HandleRef jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_Message_getTopic")]
        public static extern string Message_getTopic(HandleRef jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_Message_setTopic")]
        public static extern void Message_setTopic(HandleRef jarg1, string jarg2);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_Message_getTag")]
        public static extern string Message_getTag(HandleRef jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_Message_setTag")]
        public static extern void Message_setTag(HandleRef jarg1, string jarg2);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_Message_getKey")]
        public static extern string Message_getKey(HandleRef jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_Message_setKey")]
        public static extern void Message_setKey(HandleRef jarg1, string jarg2);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_Message_getMsgID")]
        public static extern string Message_getMsgID(HandleRef jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_Message_setMsgID")]
        public static extern void Message_setMsgID(HandleRef jarg1, string jarg2);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_Message_getStartDeliverTime")]
        public static extern long Message_getStartDeliverTime(HandleRef jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_Message_setStartDeliverTime")]
        public static extern void Message_setStartDeliverTime(HandleRef jarg1, long jarg2);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_Message_getBody")]
        public static extern string Message_getBody(HandleRef jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_Message_getMsgBody")]
        public static extern string Message_getMsgBody(HandleRef jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_Message_setMsgBody")]
        public static extern void Message_setMsgBody(HandleRef jarg1, string jarg2);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_Message_setBody")]
        public static extern void Message_setBody(HandleRef jarg1, [In] [MarshalAs(UnmanagedType.LPArray)] byte[] jarg2,
            int jarg3);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_Message_getReconsumeTimes")]
        public static extern int Message_getReconsumeTimes(HandleRef jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_Message_setReconsumeTimes")]
        public static extern void Message_setReconsumeTimes(HandleRef jarg1, int jarg2);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_Message_getStoreTimestamp")]
        public static extern long Message_getStoreTimestamp(HandleRef jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_Message_setStoreTimestamp")]
        public static extern void Message_setStoreTimestamp(HandleRef jarg1, long jarg2);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_Message_toString")]
        public static extern string Message_toString(HandleRef jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_Message_toSystemString")]
        public static extern string Message_toSystemString(HandleRef jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_Message_toUserString")]
        public static extern string Message_toUserString(HandleRef jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_Message_getQueueOffset")]
        public static extern long Message_getQueueOffset(HandleRef jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_Message_setQueueOffset")]
        public static extern void Message_setQueueOffset(HandleRef jarg1, long jarg2);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_new_MessageQueueONS__SWIG_0")]
        public static extern IntPtr new_MessageQueueONS__SWIG_0();

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_new_MessageQueueONS__SWIG_1")]
        public static extern IntPtr new_MessageQueueONS__SWIG_1(string jarg1, string jarg2, int jarg3);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_new_MessageQueueONS__SWIG_2")]
        public static extern IntPtr new_MessageQueueONS__SWIG_2(HandleRef jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_MessageQueueONS_getTopic")]
        public static extern string MessageQueueONS_getTopic(HandleRef jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_MessageQueueONS_setTopic")]
        public static extern void MessageQueueONS_setTopic(HandleRef jarg1, string jarg2);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_MessageQueueONS_getBrokerName")]
        public static extern string MessageQueueONS_getBrokerName(HandleRef jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_MessageQueueONS_setBrokerName")]
        public static extern void MessageQueueONS_setBrokerName(HandleRef jarg1, string jarg2);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_MessageQueueONS_getQueueId")]
        public static extern int MessageQueueONS_getQueueId(HandleRef jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_MessageQueueONS_setQueueId")]
        public static extern void MessageQueueONS_setQueueId(HandleRef jarg1, int jarg2);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_MessageQueueONS_compareTo")]
        public static extern int MessageQueueONS_compareTo(HandleRef jarg1, HandleRef jarg2);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_delete_MessageQueueONS")]
        public static extern void delete_MessageQueueONS(HandleRef jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_new_ONSClientException__SWIG_0")]
        public static extern IntPtr new_ONSClientException__SWIG_0();

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_delete_ONSClientException")]
        public static extern void delete_ONSClientException(HandleRef jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_new_ONSClientException__SWIG_1")]
        public static extern IntPtr new_ONSClientException__SWIG_1(string jarg1, int jarg2);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_ONSClientException_GetMsg")]
        public static extern string ONSClientException_GetMsg(HandleRef jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_ONSClientException_what")]
        public static extern string ONSClientException_what(HandleRef jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_ONSClientException_GetError")]
        public static extern int ONSClientException_GetError(HandleRef jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_new_SendResultONS")]
        public static extern IntPtr new_SendResultONS();

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_delete_SendResultONS")]
        public static extern void delete_SendResultONS(HandleRef jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_SendResultONS_setMessageId")]
        public static extern void SendResultONS_setMessageId(HandleRef jarg1, string jarg2);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_SendResultONS_getMessageId")]
        public static extern string SendResultONS_getMessageId(HandleRef jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_new_PullResultONS__SWIG_0")]
        public static extern IntPtr new_PullResultONS__SWIG_0(int jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_new_PullResultONS__SWIG_1")]
        public static extern IntPtr new_PullResultONS__SWIG_1(int jarg1, long jarg2, long jarg3, long jarg4);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_delete_PullResultONS")]
        public static extern void delete_PullResultONS(HandleRef jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_PullResultONS_pullStatus_set")]
        public static extern void PullResultONS_pullStatus_set(HandleRef jarg1, int jarg2);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_PullResultONS_pullStatus_get")]
        public static extern int PullResultONS_pullStatus_get(HandleRef jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_PullResultONS_nextBeginOffset_set")]
        public static extern void PullResultONS_nextBeginOffset_set(HandleRef jarg1, long jarg2);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_PullResultONS_nextBeginOffset_get")]
        public static extern long PullResultONS_nextBeginOffset_get(HandleRef jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_PullResultONS_minOffset_set")]
        public static extern void PullResultONS_minOffset_set(HandleRef jarg1, long jarg2);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_PullResultONS_minOffset_get")]
        public static extern long PullResultONS_minOffset_get(HandleRef jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_PullResultONS_maxOffset_set")]
        public static extern void PullResultONS_maxOffset_set(HandleRef jarg1, long jarg2);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_PullResultONS_maxOffset_get")]
        public static extern long PullResultONS_maxOffset_get(HandleRef jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_PullResultONS_msgFoundList_set")]
        public static extern void PullResultONS_msgFoundList_set(HandleRef jarg1, HandleRef jarg2);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_PullResultONS_msgFoundList_get")]
        public static extern IntPtr PullResultONS_msgFoundList_get(HandleRef jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_new_ConsumeContext")]
        public static extern IntPtr new_ConsumeContext();

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_delete_ConsumeContext")]
        public static extern void delete_ConsumeContext(HandleRef jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_new_ConsumeOrderContext")]
        public static extern IntPtr new_ConsumeOrderContext();

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_delete_ConsumeOrderContext")]
        public static extern void delete_ConsumeOrderContext(HandleRef jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_new_MessageOrderListener")]
        public static extern IntPtr new_MessageOrderListener();

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_delete_MessageOrderListener")]
        public static extern void delete_MessageOrderListener(HandleRef jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_MessageOrderListener_consume")]
        public static extern int MessageOrderListener_consume(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_MessageOrderListener_director_connect")]
        public static extern void MessageOrderListener_director_connect(HandleRef jarg1,
            MessageOrderListener.SwigDelegateMessageOrderListener_0 delegate0);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_new_MessageListener")]
        public static extern IntPtr new_MessageListener();

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_delete_MessageListener")]
        public static extern void delete_MessageListener(HandleRef jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_MessageListener_consume")]
        public static extern int MessageListener_consume(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_MessageListener_director_connect")]
        public static extern void MessageListener_director_connect(HandleRef jarg1,
            MessageListener.SwigDelegateMessageListener_0 delegate0);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_new_LocalTransactionChecker")]
        public static extern IntPtr new_LocalTransactionChecker();

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_LocalTransactionChecker_check")]
        public static extern int LocalTransactionChecker_check(HandleRef jarg1, HandleRef jarg2);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_delete_LocalTransactionChecker")]
        public static extern void delete_LocalTransactionChecker(HandleRef jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_LocalTransactionChecker_director_connect")]
        public static extern void LocalTransactionChecker_director_connect(HandleRef jarg1,
            LocalTransactionChecker.SwigDelegateLocalTransactionChecker_0 delegate0);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_new_LocalTransactionExecuter")]
        public static extern IntPtr new_LocalTransactionExecuter();

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_LocalTransactionExecuter_execute")]
        public static extern int LocalTransactionExecuter_execute(HandleRef jarg1, HandleRef jarg2);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_delete_LocalTransactionExecuter")]
        public static extern void delete_LocalTransactionExecuter(HandleRef jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_LocalTransactionExecuter_director_connect")]
        public static extern void LocalTransactionExecuter_director_connect(HandleRef jarg1,
            LocalTransactionExecuter.SwigDelegateLocalTransactionExecuter_0 delegate0);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_new_Producer")]
        public static extern IntPtr new_Producer();

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_delete_Producer")]
        public static extern void delete_Producer(HandleRef jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_Producer_start")]
        public static extern void Producer_start(HandleRef jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_Producer_shutdown")]
        public static extern void Producer_shutdown(HandleRef jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_Producer_send__SWIG_0")]
        public static extern IntPtr Producer_send__SWIG_0(HandleRef jarg1, HandleRef jarg2);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_Producer_send__SWIG_1")]
        public static extern IntPtr Producer_send__SWIG_1(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_Producer_sendOneway")]
        public static extern void Producer_sendOneway(HandleRef jarg1, HandleRef jarg2);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_Producer_director_connect")]
        public static extern void Producer_director_connect(HandleRef jarg1, Producer.SwigDelegateProducer_0 delegate0,
            Producer.SwigDelegateProducer_1 delegate1, Producer.SwigDelegateProducer_2 delegate2,
            Producer.SwigDelegateProducer_3 delegate3, Producer.SwigDelegateProducer_4 delegate4);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_new_OrderConsumer")]
        public static extern IntPtr new_OrderConsumer();

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_delete_OrderConsumer")]
        public static extern void delete_OrderConsumer(HandleRef jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_OrderConsumer_start")]
        public static extern void OrderConsumer_start(HandleRef jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_OrderConsumer_shutdown")]
        public static extern void OrderConsumer_shutdown(HandleRef jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_OrderConsumer_subscribe")]
        public static extern void OrderConsumer_subscribe(HandleRef jarg1, string jarg2, string jarg3, HandleRef jarg4);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_OrderConsumer_director_connect")]
        public static extern void OrderConsumer_director_connect(HandleRef jarg1,
            OrderConsumer.SwigDelegateOrderConsumer_0 delegate0, OrderConsumer.SwigDelegateOrderConsumer_1 delegate1,
            OrderConsumer.SwigDelegateOrderConsumer_2 delegate2);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_new_OrderProducer")]
        public static extern IntPtr new_OrderProducer();

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_delete_OrderProducer")]
        public static extern void delete_OrderProducer(HandleRef jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_OrderProducer_start")]
        public static extern void OrderProducer_start(HandleRef jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_OrderProducer_shutdown")]
        public static extern void OrderProducer_shutdown(HandleRef jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_OrderProducer_send")]
        public static extern IntPtr OrderProducer_send(HandleRef jarg1, HandleRef jarg2, string jarg3);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_OrderProducer_director_connect")]
        public static extern void OrderProducer_director_connect(HandleRef jarg1,
            OrderProducer.SwigDelegateOrderProducer_0 delegate0, OrderProducer.SwigDelegateOrderProducer_1 delegate1,
            OrderProducer.SwigDelegateOrderProducer_2 delegate2);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_new_PushConsumer")]
        public static extern IntPtr new_PushConsumer();

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_delete_PushConsumer")]
        public static extern void delete_PushConsumer(HandleRef jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_PushConsumer_start")]
        public static extern void PushConsumer_start(HandleRef jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_PushConsumer_shutdown")]
        public static extern void PushConsumer_shutdown(HandleRef jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_PushConsumer_subscribe")]
        public static extern void PushConsumer_subscribe(HandleRef jarg1, string jarg2, string jarg3, HandleRef jarg4);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_PushConsumer_director_connect")]
        public static extern void PushConsumer_director_connect(HandleRef jarg1,
            PushConsumer.SwigDelegatePushConsumer_0 delegate0, PushConsumer.SwigDelegatePushConsumer_1 delegate1,
            PushConsumer.SwigDelegatePushConsumer_2 delegate2);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_new_PullConsumer")]
        public static extern IntPtr new_PullConsumer();

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_delete_PullConsumer")]
        public static extern void delete_PullConsumer(HandleRef jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_PullConsumer_start")]
        public static extern void PullConsumer_start(HandleRef jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_PullConsumer_shutdown")]
        public static extern void PullConsumer_shutdown(HandleRef jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_PullConsumer_fetchSubscribeMessageQueues")]
        public static extern void PullConsumer_fetchSubscribeMessageQueues(HandleRef jarg1, string jarg2,
            HandleRef jarg3);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_PullConsumer_pull")]
        public static extern IntPtr PullConsumer_pull(HandleRef jarg1, HandleRef jarg2, string jarg3, long jarg4,
            int jarg5);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_PullConsumer_searchOffset")]
        public static extern long PullConsumer_searchOffset(HandleRef jarg1, HandleRef jarg2, long jarg3);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_PullConsumer_maxOffset")]
        public static extern long PullConsumer_maxOffset(HandleRef jarg1, HandleRef jarg2);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_PullConsumer_minOffset")]
        public static extern long PullConsumer_minOffset(HandleRef jarg1, HandleRef jarg2);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_PullConsumer_updateConsumeOffset")]
        public static extern void PullConsumer_updateConsumeOffset(HandleRef jarg1, HandleRef jarg2, long jarg3);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_PullConsumer_removeConsumeOffset")]
        public static extern void PullConsumer_removeConsumeOffset(HandleRef jarg1, HandleRef jarg2);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_PullConsumer_fetchConsumeOffset")]
        public static extern long PullConsumer_fetchConsumeOffset(HandleRef jarg1, HandleRef jarg2, bool jarg3);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_PullConsumer_persistConsumerOffset4PullConsumer")]
        public static extern void PullConsumer_persistConsumerOffset4PullConsumer(HandleRef jarg1, HandleRef jarg2);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_PullConsumer_director_connect")]
        public static extern void PullConsumer_director_connect(HandleRef jarg1,
            PullConsumer.SwigDelegatePullConsumer_0 delegate0, PullConsumer.SwigDelegatePullConsumer_1 delegate1,
            PullConsumer.SwigDelegatePullConsumer_2 delegate2, PullConsumer.SwigDelegatePullConsumer_3 delegate3,
            PullConsumer.SwigDelegatePullConsumer_4 delegate4, PullConsumer.SwigDelegatePullConsumer_5 delegate5,
            PullConsumer.SwigDelegatePullConsumer_6 delegate6, PullConsumer.SwigDelegatePullConsumer_7 delegate7,
            PullConsumer.SwigDelegatePullConsumer_8 delegate8, PullConsumer.SwigDelegatePullConsumer_9 delegate9,
            PullConsumer.SwigDelegatePullConsumer_10 delegate10);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_delete_TransactionProducer")]
        public static extern void delete_TransactionProducer(HandleRef jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_TransactionProducer_start")]
        public static extern void TransactionProducer_start(HandleRef jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_TransactionProducer_shutdown")]
        public static extern void TransactionProducer_shutdown(HandleRef jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_TransactionProducer_send")]
        public static extern IntPtr TransactionProducer_send(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_new_ONSFactoryProperty")]
        public static extern IntPtr new_ONSFactoryProperty();

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_delete_ONSFactoryProperty")]
        public static extern void delete_ONSFactoryProperty(HandleRef jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_ONSFactoryProperty_checkValidityOfFactoryProperties")]
        public static extern bool ONSFactoryProperty_checkValidityOfFactoryProperties(HandleRef jarg1, string jarg2,
            string jarg3);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_ONSFactoryProperty_getLogPath")]
        public static extern string ONSFactoryProperty_getLogPath(HandleRef jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_ONSFactoryProperty_setSendMsgTimeout")]
        public static extern void ONSFactoryProperty_setSendMsgTimeout(HandleRef jarg1, int jarg2);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_ONSFactoryProperty_setSendMsgRetryTimes")]
        public static extern void ONSFactoryProperty_setSendMsgRetryTimes(HandleRef jarg1, int jarg2);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_ONSFactoryProperty_setMaxMsgCacheSize")]
        public static extern void ONSFactoryProperty_setMaxMsgCacheSize(HandleRef jarg1, int jarg2);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_ONSFactoryProperty_setOnsTraceSwitch")]
        public static extern void ONSFactoryProperty_setOnsTraceSwitch(HandleRef jarg1, bool jarg2);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_ONSFactoryProperty_setOnsChannel")]
        public static extern void ONSFactoryProperty_setOnsChannel(HandleRef jarg1, int jarg2);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_ONSFactoryProperty_setFactoryProperty")]
        public static extern void ONSFactoryProperty_setFactoryProperty(HandleRef jarg1, string jarg2, string jarg3);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_ONSFactoryProperty_setFactoryProperties")]
        public static extern void ONSFactoryProperty_setFactoryProperties(HandleRef jarg1, HandleRef jarg2);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_ONSFactoryProperty_getFactoryProperties")]
        public static extern IntPtr ONSFactoryProperty_getFactoryProperties(HandleRef jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_ONSFactoryProperty_getProducerId")]
        public static extern string ONSFactoryProperty_getProducerId(HandleRef jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_ONSFactoryProperty_getConsumerId")]
        public static extern string ONSFactoryProperty_getConsumerId(HandleRef jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_ONSFactoryProperty_getPublishTopics")]
        public static extern string ONSFactoryProperty_getPublishTopics(HandleRef jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_ONSFactoryProperty_getMessageModel")]
        public static extern string ONSFactoryProperty_getMessageModel(HandleRef jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_ONSFactoryProperty_getSendMsgTimeout")]
        public static extern int ONSFactoryProperty_getSendMsgTimeout(HandleRef jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_ONSFactoryProperty_getSendMsgRetryTimes")]
        public static extern int ONSFactoryProperty_getSendMsgRetryTimes(HandleRef jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_ONSFactoryProperty_getConsumeThreadNums")]
        public static extern int ONSFactoryProperty_getConsumeThreadNums(HandleRef jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_ONSFactoryProperty_getMaxMsgCacheSize")]
        public static extern int ONSFactoryProperty_getMaxMsgCacheSize(HandleRef jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_ONSFactoryProperty_getOnsChannel")]
        public static extern int ONSFactoryProperty_getOnsChannel(HandleRef jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_ONSFactoryProperty_getChannel")]
        public static extern string ONSFactoryProperty_getChannel(HandleRef jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_ONSFactoryProperty_getMessageContent")]
        public static extern string ONSFactoryProperty_getMessageContent(HandleRef jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_ONSFactoryProperty_getNameSrvAddr")]
        public static extern string ONSFactoryProperty_getNameSrvAddr(HandleRef jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_ONSFactoryProperty_getNameSrvDomain")]
        public static extern string ONSFactoryProperty_getNameSrvDomain(HandleRef jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_ONSFactoryProperty_getAccessKey")]
        public static extern string ONSFactoryProperty_getAccessKey(HandleRef jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_ONSFactoryProperty_getSecretKey")]
        public static extern string ONSFactoryProperty_getSecretKey(HandleRef jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_ONSFactoryProperty_getOnsTraceSwitch")]
        public static extern bool ONSFactoryProperty_getOnsTraceSwitch(HandleRef jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_ONSFactoryProperty_LogPath_set")]
        public static extern void ONSFactoryProperty_LogPath_set(string jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_ONSFactoryProperty_LogPath_get")]
        public static extern string ONSFactoryProperty_LogPath_get();

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_ONSFactoryProperty_ProducerId_set")]
        public static extern void ONSFactoryProperty_ProducerId_set(string jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_ONSFactoryProperty_ProducerId_get")]
        public static extern string ONSFactoryProperty_ProducerId_get();

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_ONSFactoryProperty_ConsumerId_set")]
        public static extern void ONSFactoryProperty_ConsumerId_set(string jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_ONSFactoryProperty_ConsumerId_get")]
        public static extern string ONSFactoryProperty_ConsumerId_get();

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_ONSFactoryProperty_PublishTopics_set")]
        public static extern void ONSFactoryProperty_PublishTopics_set(string jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_ONSFactoryProperty_PublishTopics_get")]
        public static extern string ONSFactoryProperty_PublishTopics_get();

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_ONSFactoryProperty_MsgContent_set")]
        public static extern void ONSFactoryProperty_MsgContent_set(string jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_ONSFactoryProperty_MsgContent_get")]
        public static extern string ONSFactoryProperty_MsgContent_get();

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_ONSFactoryProperty_ONSAddr_set")]
        public static extern void ONSFactoryProperty_ONSAddr_set(string jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_ONSFactoryProperty_ONSAddr_get")]
        public static extern string ONSFactoryProperty_ONSAddr_get();

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_ONSFactoryProperty_AccessKey_set")]
        public static extern void ONSFactoryProperty_AccessKey_set(string jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_ONSFactoryProperty_AccessKey_get")]
        public static extern string ONSFactoryProperty_AccessKey_get();

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_ONSFactoryProperty_SecretKey_set")]
        public static extern void ONSFactoryProperty_SecretKey_set(string jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_ONSFactoryProperty_SecretKey_get")]
        public static extern string ONSFactoryProperty_SecretKey_get();

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_ONSFactoryProperty_MessageModel_set")]
        public static extern void ONSFactoryProperty_MessageModel_set(string jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_ONSFactoryProperty_MessageModel_get")]
        public static extern string ONSFactoryProperty_MessageModel_get();

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_ONSFactoryProperty_BROADCASTING_set")]
        public static extern void ONSFactoryProperty_BROADCASTING_set(string jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_ONSFactoryProperty_BROADCASTING_get")]
        public static extern string ONSFactoryProperty_BROADCASTING_get();

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_ONSFactoryProperty_CLUSTERING_set")]
        public static extern void ONSFactoryProperty_CLUSTERING_set(string jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_ONSFactoryProperty_CLUSTERING_get")]
        public static extern string ONSFactoryProperty_CLUSTERING_get();

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_ONSFactoryProperty_SendMsgTimeoutMillis_set")]
        public static extern void ONSFactoryProperty_SendMsgTimeoutMillis_set(string jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_ONSFactoryProperty_SendMsgTimeoutMillis_get")]
        public static extern string ONSFactoryProperty_SendMsgTimeoutMillis_get();

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_ONSFactoryProperty_NAMESRV_ADDR_set")]
        public static extern void ONSFactoryProperty_NAMESRV_ADDR_set(string jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_ONSFactoryProperty_NAMESRV_ADDR_get")]
        public static extern string ONSFactoryProperty_NAMESRV_ADDR_get();

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_ONSFactoryProperty_ConsumeThreadNums_set")]
        public static extern void ONSFactoryProperty_ConsumeThreadNums_set(string jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_ONSFactoryProperty_ConsumeThreadNums_get")]
        public static extern string ONSFactoryProperty_ConsumeThreadNums_get();

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_ONSFactoryProperty_OnsChannel_set")]
        public static extern void ONSFactoryProperty_OnsChannel_set(string jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_ONSFactoryProperty_OnsChannel_get")]
        public static extern string ONSFactoryProperty_OnsChannel_get();

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_ONSFactoryProperty_MaxMsgCacheSize_set")]
        public static extern void ONSFactoryProperty_MaxMsgCacheSize_set(string jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_ONSFactoryProperty_MaxMsgCacheSize_get")]
        public static extern string ONSFactoryProperty_MaxMsgCacheSize_get();

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_ONSFactoryProperty_OnsTraceSwitch_set")]
        public static extern void ONSFactoryProperty_OnsTraceSwitch_set(string jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_ONSFactoryProperty_OnsTraceSwitch_get")]
        public static extern string ONSFactoryProperty_OnsTraceSwitch_get();

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_ONSFactoryProperty_SendMsgRetryTimes_set")]
        public static extern void ONSFactoryProperty_SendMsgRetryTimes_set(string jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_ONSFactoryProperty_SendMsgRetryTimes_get")]
        public static extern string ONSFactoryProperty_SendMsgRetryTimes_get();

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_new_ONSFactoryAPI")]
        public static extern IntPtr new_ONSFactoryAPI();

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_delete_ONSFactoryAPI")]
        public static extern void delete_ONSFactoryAPI(HandleRef jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_ONSFactoryAPI_createProducer")]
        public static extern IntPtr ONSFactoryAPI_createProducer(HandleRef jarg1, HandleRef jarg2);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_ONSFactoryAPI_createOrderProducer")]
        public static extern IntPtr ONSFactoryAPI_createOrderProducer(HandleRef jarg1, HandleRef jarg2);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_ONSFactoryAPI_createOrderConsumer")]
        public static extern IntPtr ONSFactoryAPI_createOrderConsumer(HandleRef jarg1, HandleRef jarg2);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_ONSFactoryAPI_createTransactionProducer")]
        public static extern IntPtr ONSFactoryAPI_createTransactionProducer(HandleRef jarg1, HandleRef jarg2,
            HandleRef jarg3);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_ONSFactoryAPI_createPullConsumer")]
        public static extern IntPtr ONSFactoryAPI_createPullConsumer(HandleRef jarg1, HandleRef jarg2);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_ONSFactoryAPI_createPushConsumer")]
        public static extern IntPtr ONSFactoryAPI_createPushConsumer(HandleRef jarg1, HandleRef jarg2);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_delete_ONSFactory")]
        public static extern void delete_ONSFactory(HandleRef jarg1);

        [DllImport("ONSClient4CPP", EntryPoint = "CSharp_ons_ONSFactory_getInstance")]
        public static extern IntPtr ONSFactory_getInstance();

        protected class SWIGExceptionHelper
        {
            public delegate void ExceptionArgumentDelegate(string message, string paramName);

            public delegate void ExceptionDelegate(string message);

            private static readonly ExceptionDelegate applicationDelegate = SetPendingApplicationException;
            private static readonly ExceptionDelegate arithmeticDelegate = SetPendingArithmeticException;
            private static readonly ExceptionDelegate divideByZeroDelegate = SetPendingDivideByZeroException;
            private static readonly ExceptionDelegate indexOutOfRangeDelegate = SetPendingIndexOutOfRangeException;
            private static readonly ExceptionDelegate invalidCastDelegate = SetPendingInvalidCastException;
            private static readonly ExceptionDelegate invalidOperationDelegate = SetPendingInvalidOperationException;
            private static readonly ExceptionDelegate ioDelegate = SetPendingIOException;
            private static readonly ExceptionDelegate nullReferenceDelegate = SetPendingNullReferenceException;
            private static readonly ExceptionDelegate outOfMemoryDelegate = SetPendingOutOfMemoryException;
            private static readonly ExceptionDelegate overflowDelegate = SetPendingOverflowException;
            private static readonly ExceptionDelegate systemDelegate = SetPendingSystemException;

            private static readonly ExceptionArgumentDelegate argumentDelegate = SetPendingArgumentException;
            private static readonly ExceptionArgumentDelegate argumentNullDelegate = SetPendingArgumentNullException;

            private static readonly ExceptionArgumentDelegate argumentOutOfRangeDelegate =
                SetPendingArgumentOutOfRangeException;

            static SWIGExceptionHelper()
            {
                SWIGRegisterExceptionCallbacks_ONSClient4CPP(
                    applicationDelegate,
                    arithmeticDelegate,
                    divideByZeroDelegate,
                    indexOutOfRangeDelegate,
                    invalidCastDelegate,
                    invalidOperationDelegate,
                    ioDelegate,
                    nullReferenceDelegate,
                    outOfMemoryDelegate,
                    overflowDelegate,
                    systemDelegate);

                SWIGRegisterExceptionCallbacksArgument_ONSClient4CPP(
                    argumentDelegate,
                    argumentNullDelegate,
                    argumentOutOfRangeDelegate);
            }

            [DllImport("ONSClient4CPP", EntryPoint = "SWIGRegisterExceptionCallbacks_ONSClient4CPP")]
            public static extern void SWIGRegisterExceptionCallbacks_ONSClient4CPP(
                ExceptionDelegate applicationDelegate,
                ExceptionDelegate arithmeticDelegate,
                ExceptionDelegate divideByZeroDelegate,
                ExceptionDelegate indexOutOfRangeDelegate,
                ExceptionDelegate invalidCastDelegate,
                ExceptionDelegate invalidOperationDelegate,
                ExceptionDelegate ioDelegate,
                ExceptionDelegate nullReferenceDelegate,
                ExceptionDelegate outOfMemoryDelegate,
                ExceptionDelegate overflowDelegate,
                ExceptionDelegate systemExceptionDelegate);

            [DllImport("ONSClient4CPP", EntryPoint = "SWIGRegisterExceptionArgumentCallbacks_ONSClient4CPP")]
            public static extern void SWIGRegisterExceptionCallbacksArgument_ONSClient4CPP(
                ExceptionArgumentDelegate argumentDelegate,
                ExceptionArgumentDelegate argumentNullDelegate,
                ExceptionArgumentDelegate argumentOutOfRangeDelegate);

            private static void SetPendingApplicationException(string message)
            {
                SWIGPendingException.Set(new ApplicationException(message, SWIGPendingException.Retrieve()));
            }

            private static void SetPendingArithmeticException(string message)
            {
                SWIGPendingException.Set(new ArithmeticException(message, SWIGPendingException.Retrieve()));
            }

            private static void SetPendingDivideByZeroException(string message)
            {
                SWIGPendingException.Set(new DivideByZeroException(message, SWIGPendingException.Retrieve()));
            }

            private static void SetPendingIndexOutOfRangeException(string message)
            {
                SWIGPendingException.Set(new IndexOutOfRangeException(message, SWIGPendingException.Retrieve()));
            }

            private static void SetPendingInvalidCastException(string message)
            {
                SWIGPendingException.Set(new InvalidCastException(message, SWIGPendingException.Retrieve()));
            }

            private static void SetPendingInvalidOperationException(string message)
            {
                SWIGPendingException.Set(new InvalidOperationException(message, SWIGPendingException.Retrieve()));
            }

            private static void SetPendingIOException(string message)
            {
                SWIGPendingException.Set(new IOException(message, SWIGPendingException.Retrieve()));
            }

            private static void SetPendingNullReferenceException(string message)
            {
                SWIGPendingException.Set(new NullReferenceException(message, SWIGPendingException.Retrieve()));
            }

            private static void SetPendingOutOfMemoryException(string message)
            {
                SWIGPendingException.Set(new OutOfMemoryException(message, SWIGPendingException.Retrieve()));
            }

            private static void SetPendingOverflowException(string message)
            {
                SWIGPendingException.Set(new OverflowException(message, SWIGPendingException.Retrieve()));
            }

            private static void SetPendingSystemException(string message)
            {
                SWIGPendingException.Set(new SystemException(message, SWIGPendingException.Retrieve()));
            }

            private static void SetPendingArgumentException(string message, string paramName)
            {
                SWIGPendingException.Set(new ArgumentException(message, paramName, SWIGPendingException.Retrieve()));
            }

            private static void SetPendingArgumentNullException(string message, string paramName)
            {
                var e = SWIGPendingException.Retrieve();
                if (e != null) message = message + " Inner Exception: " + e.Message;
                SWIGPendingException.Set(new ArgumentNullException(paramName, message));
            }

            private static void SetPendingArgumentOutOfRangeException(string message, string paramName)
            {
                var e = SWIGPendingException.Retrieve();
                if (e != null) message = message + " Inner Exception: " + e.Message;
                SWIGPendingException.Set(new ArgumentOutOfRangeException(paramName, message));
            }
        }

        public class SWIGPendingException
        {
            [ThreadStatic] private static Exception pendingException;

            private static int numExceptionsPending;

            public static bool Pending
            {
                get
                {
                    var pending = false;
                    if (numExceptionsPending > 0)
                        if (pendingException != null)
                            pending = true;
                    return pending;
                }
            }

            public static void Set(Exception e)
            {
                if (pendingException != null)
                    throw new ApplicationException(
                        "FATAL: An earlier pending exception from unmanaged code was missed and thus not thrown (" +
                        pendingException + ")", e);
                pendingException = e;
                lock (typeof(ONSClient4CPPPINVOKE))
                {
                    numExceptionsPending++;
                }
            }

            public static Exception Retrieve()
            {
                Exception e = null;
                if (numExceptionsPending > 0)
                    if (pendingException != null)
                    {
                        e = pendingException;
                        pendingException = null;
                        lock (typeof(ONSClient4CPPPINVOKE))
                        {
                            numExceptionsPending--;
                        }
                    }
                return e;
            }
        }


        protected class SWIGStringHelper
        {
            public delegate string SWIGStringDelegate(string message);

            private static readonly SWIGStringDelegate stringDelegate = CreateString;

            static SWIGStringHelper()
            {
                SWIGRegisterStringCallback_ONSClient4CPP(stringDelegate);
            }

            [DllImport("ONSClient4CPP", EntryPoint = "SWIGRegisterStringCallback_ONSClient4CPP")]
            public static extern void SWIGRegisterStringCallback_ONSClient4CPP(SWIGStringDelegate stringDelegate);

            private static string CreateString(string cString)
            {
                return cString;
            }
        }
    }
}